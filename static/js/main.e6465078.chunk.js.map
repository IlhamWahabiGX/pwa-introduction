{"version":3,"sources":["presentation.js","registerServiceWorker.js","index.js"],"names":["require","theme","createTheme","primary","secondary","tertiary","quartenary","orange","orangered","cyan","red","slidesImports","__webpack_require__","e","then","bind","Promise","all","Presentation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","slides","Array","length","fill","react_default","a","createElement","components_slide","key","_this2","importedSlides","slidesImportsResolved","forEach","slide","push","default","setState","deck","transition","progress","transitionDuration","map","index","React","cloneElement","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","presentation_Presentation","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"yPAeAA,EAAQ,KAER,IAAMC,EAAQC,IACZ,CACEC,QAAS,QACTC,UAAW,UACXC,SAAU,UACVC,WAAY,UACZC,OAAQ,SACRC,UAAW,YACXC,KAAM,OACNC,IAAK,WAEP,CACEP,QAAS,sBACTC,UAAW,cAITO,EAAgB,CACpBC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAEAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAIAH,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WAEAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WAEAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WAEAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAC,QAAAC,IAAA,CAAAL,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,YAGmBG,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,OAAQC,MAAMlB,EAAcmB,QAAQC,KAAKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,IAAI,cAJrChB,mFAQC,IAAAiB,EAAAd,KACZe,EAAiB,GACvBtB,QAAQC,IAAIN,GAAeG,KAAK,SAACyB,GAC/BA,EAAsBC,QAAQ,SAACC,GAC7BH,EAAeI,KAAKD,EAAME,WAE5BN,EAAKO,SAAS,CAAEhB,OAAQU,uCAInB,IACCV,EAAWL,KAAKI,MAAhBC,OACR,OACEI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,WAAY,CAAC,OAAQ,SAAUC,SAAS,MAAMC,mBAAoB,IAAK/C,MAAOA,GAEhF2B,EAAOqB,IAAI,SAACR,EAAOS,GACjB,OAAOC,IAAMC,aAAaX,EAAO,CAACL,IAAKc,cAzBTC,IAAME,WC/D1CC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT/C,KAAK,SAAAmD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxC,QACfmC,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCjEjEC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAAkBC,SAASC,eAAe,SDe3C,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,oBAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,GAAAuB,OAAMH,oBAAN,sBAEP3B,EAwCV,SAAiCO,GAE/BwB,MAAMxB,GACH/C,KAAK,SAAAwE,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM7E,KAAK,SAAAmD,GACjCA,EAAa2B,aAAa9E,KAAK,WAC7B0C,OAAOC,SAASoC,aAKpBjC,EAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEA5DAsB,CAAwBjC,GAGxBD,EAAgBC,MCjCxBkC","file":"static/js/main.e6465078.chunk.js","sourcesContent":["// Import React\r\nimport React from 'react';\r\n\r\n// Import Spectacle Core tags\r\nimport {\r\n  Deck,\r\n  Slide\r\n} from 'spectacle';\r\n\r\n// Import theme\r\nimport createTheme from 'spectacle/lib/themes/default';\r\n\r\n// import Introduction from './Introduction/introduction'\r\n\r\n// Require CSS\r\nrequire('normalize.css');\r\n\r\nconst theme = createTheme(\r\n  {\r\n    primary: 'white',\r\n    secondary: '#1F2022',\r\n    tertiary: '#03A9FC',\r\n    quartenary: '#CECECE',\r\n    orange: 'orange',\r\n    orangered: 'orangered',\r\n    cyan: 'cyan',\r\n    red: '#E23636'\r\n  },\r\n  {\r\n    primary: 'Open Sans Condensed',\r\n    secondary: 'Helvetica',\r\n  }\r\n);\r\n\r\nconst slidesImports = [\r\n  import('./slides/1section-greeting/greeting1'),\r\n\r\n  import('./slides/2section-introduction/introduction1'),\r\n  import('./slides/2section-introduction/introduction2'),\r\n  import('./slides/2section-introduction/introduction3'),\r\n  import('./slides/2section-introduction/introduction4'),\r\n  import('./slides/2section-introduction/introduction5'),\r\n  import('./slides/2section-introduction/introduction8'),\r\n  // import('./slides/2section-introduction/introduction6'),\r\n  // import('./slides/2section-introduction/introduction7'),\r\n\r\n  import('./slides/3section-attention/attention1'),\r\n  import('./slides/3section-attention/attention2'),\r\n  import('./slides/3section-attention/attention3'),\r\n  import('./slides/3section-attention/attention4'),\r\n  import('./slides/3section-attention/attention5'),\r\n  import('./slides/3section-attention/attention6'),\r\n  import('./slides/3section-attention/attention7'),\r\n  import('./slides/5section-quote/quote2'),        \r\n  import('./slides/3section-attention/attention9'),\r\n  import('./slides/3section-attention/attention10'),\r\n  import('./slides/3section-attention/attention11'),\r\n  import('./slides/3section-attention/attention12'),\r\n  import('./slides/3section-attention/attention13'),\r\n  import('./slides/3section-attention/attention8'),\r\n\r\n  import('./slides/4section-finish/finish1'),  \r\n  import('./slides/5section-quote/quote3'),        \r\n  import('./slides/4section-finish/finish2'),  \r\n  // import('./slides/4section-finish/finish7'),      \r\n  import('./slides/5section-quote/quote1'),      \r\n  // import('./slides/4section-finish/finish6'),    \r\n  import('./slides/4section-finish/finish5'),  \r\n  import('./slides/4section-finish/finish8'),    \r\n  import('./slides/4section-finish/finish3'),  \r\n  import('./slides/4section-finish/finish4'),    \r\n]\r\n\r\nexport default class Presentation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      slides: Array(slidesImports.length).fill(<Slide key=\"loading\" />)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const importedSlides = [];\r\n    Promise.all(slidesImports).then((slidesImportsResolved) => {\r\n      slidesImportsResolved.forEach((slide) => {\r\n        importedSlides.push(slide.default);\r\n      });\r\n      this.setState({ slides: importedSlides });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { slides } = this.state;\r\n    return (\r\n      <Deck transition={[\"zoom\", \"slide\"]} progress=\"bar\" transitionDuration={500} theme={theme}>\r\n        {\r\n          slides.map((slide, index) => {\r\n            return React.cloneElement(slide, {key: index});\r\n          })\r\n        }\r\n      </Deck>\r\n    );\r\n  }\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Presentation from './presentation';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<Presentation />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}